---

- block:

  - name: check grub bootloader
    register: p
    stat: path=/mnt/boot/grub/grub.cfg

  - name: set bootloader to grub
    set_fact:
      bootloader: grub
    when: p.stat.exists

  when: bootloader == 'auto'

- block:

  - name: check syslinux bootloader
    register: p
    stat: path=/mnt/boot/syslinux/syslinux.cfg

  - name: set bootloader to syslinux
    set_fact:
      bootloader: syslinux
    when: p.stat.exists

  when: bootloader == 'auto'

- block:

  - name: set bootloader to syslinux
    set_fact:
      bootloader: syslinux
    when: firmware == 'bios'

  when: bootloader == 'auto'

- block:

  - name: check systemd-boot bootloader
    register: p
    stat: path=/mnt/boot/loader/loader.conf

  - name: set bootloader to systemd-boot
    set_fact:
      bootloader: systemd-boot
    when: p.stat.exists

  when: bootloader == 'auto'

- block:

  - name: set bootloader to systemd-boot
    set_fact:
      bootloader: systemd-boot
    when: firmware == 'uefi'

  when: bootloader == 'auto'

- name: assert bootloader for bios firmware
  assert:
    that: "not (bootloader == 'systemd-boot' and firmware == 'bios')"

- block:

  - name: install efibootmgr package
    command: pacstrap /mnt efibootmgr
    when: firmware == 'uefi'

  - name: install grub package
    command: creates=/mnt/usr/bin/grub-install pacstrap /mnt grub

  when: bootloader == 'grub'

- name: install syslinux package
  command: creates=/mnt/usr/bin/syslinux pacstrap /mnt syslinux
  when: bootloader == 'syslinux'

# TODO: think about checking device boot sectors to check which bootloader is installed

- block:

  - name: install grub bootloader
    command: creates=/mnt/boot/grub/grubenv
             arch-chroot /mnt grub-install {{ device }}

  - name: make grub config
    changed_when: false
    command: arch-chroot /mnt grub-mkconfig
    register: c

  - name: update grub config
    copy: content={{ c.stdout }} dest=/mnt/boot/grub/grub.cfg

  when: bootloader == 'grub'

- block:

  - name: install syslinux bootloader
    command: creates=/mnt/boot/syslinux/SYSLINUX_AUTOUPDATE
             arch-chroot /mnt syslinux-install_update -i

  - name: update syslinux config
    replace: dest=/mnt/boot/syslinux/syslinux.cfg
             regexp=(?<=root=).*?(?=\s|\Z)
             replace={{ boot }}

  when: bootloader == 'syslinux'

- block:

  # XXX: it might be nice to add more strong check for status of installed
  # systemd-boot due the following task will not add entry to EFI Variables
  # if /mnt/boot/loader/loader.conf exists

  # XXX: looks like `bootctl install` always returns 1

  - name: install systemd-boot bootloader
    command: creates=/mnt/boot/loader/loader.conf arch-chroot /mnt bootctl install
    failed_when: false

  - name: create systemd-boot entry
    command: creates=/mnt/boot/loader/entries/arch.conf
             install -D /mnt/usr/share/systemd/bootctl/arch.conf
                        /mnt/boot/loader/entries/arch.conf

  - name: detect root partuuid
    changed_when: false
    register: s
    shell: blkid -o value -s PARTUUID {{ root }}

  - name: update systemd-boot entry root
    replace: dest=/mnt/boot/loader/entries/arch.conf
             regexp=(?<=root=PARTUUID=).*?(?=\s|$)
             replace={{ s.stdout }}

  - name: update systemd-boot entry rootfstype
    replace: dest=/mnt/boot/loader/entries/arch.conf
             regexp=(?<=rootfstype=).*?(?=\s|$)
             replace='{{ filesystem }}'

  - name: update systemd-boot config
    replace: dest=/mnt/boot/loader/loader.conf
             regexp=(?<=^default\s)(?:\s*).*
             replace='arch'

  when: bootloader == 'systemd-boot'
